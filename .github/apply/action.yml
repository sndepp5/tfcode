name: Terraform Apply Action
description: composite action for terraform plan
inputs:
  directory:
    description: Folder terraform files are stored
    required: true
  aws-access-key-id:
    description: Access key for AWS account
    required: true
  aws-secret-access-key:
    description: Secret key for AWS account
    required: true
  aws-region:
    description: Required Region
    required: true
  terraform_version:
    description: Current version of Terraform
    required: true
  
runs:
  using: composite
  steps:

  - name: Setup Terraform
    uses: hashicorp/setup-terraform@v2
    with:
        terraform_version: ${{ inputs.terraform_version }}

  - name: Configure AWS 
    uses: aws-actions/configure-aws-credentials@v3
    with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
  
  - name: condition 
    if: ${{ env.bucket_name != 'bshorg-ss-bucket-check' && env.dynamodb_name != 'bshorg-dynamodb-table-check' }}
    run: |
        cd backend
        sed -i 's/terraform-up-and-running-statezpl-ccs/${{ env.bucket_name }}/g' backend.tf
        sed -i 's/terraform-up-and-running-locks-ccs/${{ env.dynamodb_name }}/g' backend.tf
        cat backend.tf
        terraform init
        terraform apply -auto-approve
    shell: bash
  
  - name: Terraform format
    run: |
      terraform init
      terraform fmt -diff
    shell: bash

  - name: Terraform validate
    run: terraform validate
    shell: bash

  - name: Download Plan file
    uses: actions/download-artifact@v3
    with:
      name: plan.tfplan

  - name: Terraform apply
    run: |
      terraform apply -auto-approve plan.tfplan
      terraform init -reconfigure
    shell: bash